.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.4.
.TH LOCARNA "1" "July 2017" "LocARNA 1.9.2" "User Commands"
.SH NAME
LocARNA \- manual page for LocARNA 1.9.2
.SH DESCRIPTION
locarna \- pairwise (global and local) alignment of RNA.
.PP
USAGE: ../../src/locarna [options] <Input 1> <Input 2>
.SH OPTIONS
.HP
\fB\-h\fR,\-\-help
.IP
Print this help.
.HP
\fB\-\-galaxy\-xml\fR
.IP
Print galaxy xml wrapper.
.HP
\fB\-V\fR,\-\-version
.IP
Print only version string.
.HP
\fB\-v\fR,\-\-verbose
.IP
Be verbose. Prints input parameters, sequences and size information.
.HP
\fB\-q\fR,\-\-quiet
.IP
Be quiet.
.SS "Scoring parameters:"
.HP
\fB\-i\fR,\-\-indel=<score>(\fB\-350\fR)
.IP
Indel score. Score contribution of each single base insertion or
deletion. Indel opening score and indel score define the affine scoring
of gaps.
.HP
\fB\-\-indel\-opening=\fR<score>(\fB\-500\fR)
.IP
Indel opening score. Score contribution of opening an insertion or
deletion, i.e. score for a consecutive run of deletions or insertions.
Indel opening score and indel score define the affine scoring of gaps.
.HP
\fB\-\-ribosum\-file=\fR<f>(RIBOSUM85_60)
.IP
File specifying the Ribosum base and base\-pair similarities. [default:
use RIBOSUM85_60 without requiring a Ribosum file.]
.HP
\fB\-\-use\-ribosum=\fR<bool>(true)
.IP
Use ribosum scores for scoring base matches and base pair matches; note
that tau=0 suppresses any effect on the latter.
.HP
\fB\-m\fR,\-\-match=<score>(50)
.IP
Set score contribution of a base match (unless ribosum scoring).
.HP
\fB\-M\fR,\-\-mismatch=<score>(0)
.IP
Set score contribution of a base mismatch (unless ribosum scoring).
.HP
\fB\-\-unpaired\-penalty=\fR<score>(0)
.IP
Penalty for unpaired bases
.HP
\fB\-s\fR,\-\-struct\-weight=<score>(200)
.IP
Maximal weight of 1/2 arc match. Balances structure vs. sequence score
contributions.
.HP
\fB\-e\fR,\-\-exp\-prob=<prob>
.IP
Expected base pair probability. Used as background probability for base
pair scoring [default: calculated from sequence length].
.HP
\fB\-t\fR,\-\-tau=<factor>(0)
.IP
Tau factor. Factor for contribution of sequence similarity in an arc
match (in percent). tau=0 does not penalize any sequence information
including compensatory mutations at arc matches, while tau=100 scores
sequence similarity at ends of base matches (if a scoring matrix like
ribosum is used, this adds the contributions for base pair match from the
matrix). [default tau=0!]
.HP
\fB\-E\fR,\-\-exclusion=<score>(0)
.IP
Score contribution per exclusion in structure local alignment. Set to
zero for unrestricted structure locality.
.HP
\fB\-\-stacking\fR
.IP
Use stacking terms (requires stack\-probs by RNAfold \fB\-p2\fR)
.HP
\fB\-\-new\-stacking\fR
.IP
Use new stacking terms (requires stack\-probs by RNAfold \fB\-p2\fR)
.SS "Locality:"
.HP
\fB\-\-struct\-local=\fR<bool>(false)
.IP
Turn on/off structure locality. Allow exclusions in alignments of
connected substructures.
.HP
\fB\-\-sequ\-local=\fR<bool>(false)
.IP
Turn on/off sequence locality. Find best alignment of arbitrary
subsequences of the input sequences.
.HP
\fB\-\-free\-endgaps=\fR<spec>(\fB\-\-\-\-\fR)
.IP
Control where end gaps are allowed for free. String of four +/\- symbols,
allowing/disallowing free end gaps at the four sequence ends in the order
left end of first sequence, right end of first sequence, left end of
second sequence, right end of second sequence. For example, "+\-\-\-" allows
free end gaps at the left end of the first alignment string; "\-\-\-\-"
forbids free end gaps [default].
.HP
\fB\-\-normalized=\fR<L>(0)
.IP
Perform normalized local alignment with parameter L. This causes locarna
to compute the best local alignment according to 'Score' / ( L + 'length'
), where length is the sum of the lengths of the two locally aligned
subsequences. Thus, the larger L, the larger the local alignment; the
size of value L is in the order of local alignment lengths. Verbose
yields info on the iterative optimizations.
.HP
\fB\-\-penalized=\fR<PP>(0)
.IP
Penalized local alignment with penalty PP
.SS "Output:"
.HP
\fB\-w\fR,\-\-width=<columns>(120)
.IP
Width of alignment output.
.HP
\fB\-\-clustal=\fR<file>
.IP
Write alignment in ClustalW (aln) format to given file.
.HP
\fB\-\-stockholm=\fR<file>
.IP
Write alignment Stockholm format to given file.
.HP
\fB\-\-pp=\fR<file>
.IP
Write alignment in PP format to given file.
.HP
\fB\-\-alifold\-consensus\-dp\fR
.IP
Compute consensus dot plot by alifold.
.HP
\fB\-\-consensus\-structure=\fR<type>(alifold)
.IP
Type of consensus structures written to screen and stockholm output
[alifold|mea|none]
.HP
\fB\-L\fR,\-\-local\-output
.IP
Output only local sub\-alignment (to std out).
.HP
\fB\-\-local\-file\-output\fR
.IP
Write only local sub\-alignment to output files.
.HP
\fB\-P\fR,\-\-pos\-output
.IP
Output only local sub\-alignment positions.
.HP
\fB\-\-write\-structure\fR
.IP
Write guidance structure in output.
.HP
\fB\-\-score\-components\fR
.IP
Output components of the score (experimental).
.HP
\fB\-\-stopwatch\fR
.IP
Print run time informations.
.SS "Heuristics for speed accuracy trade off:"
.HP
\fB\-p\fR,\-\-min\-prob=<prob>(0.0005)
.IP
Minimal probability. Only base pairs of at least this probability are
taken into account.
.HP
\fB\-\-max\-bps\-length\-ratio=\fR<factor>(0.0)
.IP
Maximal ratio of #base pairs divided by sequence length. This serves as a
second filter on the "significant" base pairs. [default: 0.0 = no
effect].
.HP
\fB\-D\fR,\-\-max\-diff\-am=<diff>(\fB\-1\fR)
.IP
Maximal difference for sizes of matched arcs. [\-1=off]
.HP
\fB\-d\fR,\-\-max\-diff=<diff>(\fB\-1\fR)
.IP
Maximal difference for positions of alignment traces (and aligned bases).
[\-1=off]
.HP
\fB\-\-max\-diff\-at\-am=\fR<diff>(\fB\-1\fR)
.IP
Maximal difference for positions of alignment traces at arc match ends.
[\-1=off]
.HP
\fB\-\-max\-diff\-aln=\fR<aln file>()
.IP
Maximal difference relative to given alignment (file in clustalw format)
.HP
\fB\-\-max\-diff\-pw\-aln=\fR<alignment>()
.IP
Maximal difference relative to given alignment (string, delim=AMPERSAND)
.HP
\fB\-\-max\-diff\-relax\fR
.IP
Relax deviation constraints in multiple aligmnent
.SS "Special sauce options:"
.HP
\fB\-\-kbest=\fR<k>(\fB\-1\fR)
.IP
Enumerate k\-best alignments
.HP
\fB\-\-better=\fR<t>(\fB\-1000000\fR)
.IP
Enumerate alignments better threshold t
.SS "MEA score:"
.HP
\fB\-\-mea\-alignment\fR
.IP
Perform maximum expected accuracy alignment (instead of using the default
similarity scoring).
.HP
\fB\-\-match\-prob\-method=\fR<int>(0)
.IP
Select method for computing sequence\-based base match probablities (to be
used for mea\-type alignment scores). Methods: 1=probcons\-style from HMM,
2=probalign\-style from PFs, 3=from PFs, local
.HP
\fB\-\-probcons\-file=\fR<file>
.IP
Read parameters for probcons\-like calculation of match probabilities from
probcons parameter file.
.HP
\fB\-\-temperature\-alipf=\fR<int>(150)
.IP
Temperature for the /alignment/ partition functions used by the
probcons\-like sequence\-based match probability computation (this
temperature is different from the 'physical' temperature of RNA
folding!).
.HP
\fB\-\-pf\-struct\-weight=\fR<weight>(200)
.IP
Structure weight in PF computations (for the computation of
sequence\-based match probabilties from partition functions).
.HP
\fB\-\-mea\-gapcost\fR
.IP
Use gap cost in mea alignment
.HP
\fB\-\-mea\-alpha=\fR<weight>(0)
.IP
Weight alpha for MEA
.HP
\fB\-\-mea\-beta=\fR<weight>(200)
.IP
Weight beta for MEA
.HP
\fB\-\-mea\-gamma=\fR<weight>(100)
.IP
Weight gamm for MEA
.HP
\fB\-\-probability\-scale=\fR<scale>(10000)
.IP
Scale for probabilities/resolution of mea score
.HP
\fB\-\-write\-match\-probs=\fR<file>
.IP
Write match probs to file (don't align!).
.HP
\fB\-\-read\-match\-probs=\fR<file>
.IP
Read match probabilities from file.
.HP
\fB\-\-write\-arcmatch\-scores=\fR<file>
.IP
Write arcmatch scores (don't align!)
.HP
\fB\-\-read\-arcmatch\-scores=\fR<file>
.IP
Read arcmatch scores.
.HP
\fB\-\-read\-arcmatch\-probs=\fR<file>
.IP
Read arcmatch probabilities (weighted by factor mea_beta/100)
.SS "Constraints:"
.HP
\fB\-\-noLP\fR
.IP
Disallow lonely pairs in prediction and alignment.
.HP
\fB\-\-maxBPspan=\fR<span>(\fB\-1\fR)
.IP
Limit maximum base pair span [default=off].
.HP
\fB\-\-relaxed\-anchors\fR
.IP
Use relaxed semantics of anchor constraints [default=strict semantics].
.SS "Input files:"
.IP
The tool is called with two input files <Input 1> and <Input 2>, which
specify the two input sequences or input alignments. Different input
formats (Fasta, Clustal, Stockholm, LocARNA PP, ViennaRNA postscript
dotplots) are accepted and automatically recognized (by file content); the
two input files can be in different formats. Extended variants of the
Clustal and Stockholm formats enable specifying anchor and structure
constraints.
.SH EXAMPLES

In the simplest case, the tool is called with two sequences in fasta
format or two alignments in multiple fasta, clustal or stockholm format like

  locarna file1.fa file2.fa 

or

   locarna file1.aln file2.aln

Note that input formats can be mixed like in

  locarna file1.aln file2.stk


.SS Constraint Examples

.PP
Anchor and structure constraints can be specified in extended versions
of the Clustal format, in the LocARNA PP 2.0 format, as well as in
Stockholm format. Currently, the pairwise alignment tools of the
package do not support constraints in fasta-like input. Here is an
example of constraints in Clustal format:

.nf
.ft CW
CLUSTAL W

vhuU            AGCUCACAACCGAACCCAUUUGGGAGGUUGUGAGCU
fruA            CC-UCGAGGG-GAACCCGAAA-GGGACCCGAGA-GG
#S              (<<<<<<<<<......xxxx...............)
#A1             .............AAABB..................
#A2             .............12312..................
.ft
.fi

The syntax (and semantic) of structure constraint strings (prefixed by
#S) is the one of RNAfold of the ViennaRNA package. Moreover, fixed
structures prefixed by #FS are accepted; fixed structures can contain
pseudoknots encodes by different bracket symbols.

Anchors are specified by naming columns, where names can consist of
several places, in the example each name consists of two characters,
such that the names are A1, A2, A3, B1, B2 for the respective columns.

.PP
Constraints in PP format are specified in the same way; however, in
Stockholm format we use different prefixes, such that the example would look like

.nf
.ft CW
# STOCKHOLM 1.0

vhuU            AGCUCACAACCGAACCCAUUUGGGAGGUUGUGAGCU
fruA            CC-UCGAGGG-GAACCCGAAA-GGGACCCGAGA-GG
#=GC cS         (<<<<<<<<<......xxxx...............)
#=GC cA1        .............AAABB..................
#=GC cA2        .............12312..................
.ft
.fi

The prefix for fixed structures is '#=GC cFS'.
.SH ">DESCRIPTION"

locarna is the pairwise alignment tool of the LocARNA package, which
performs fast simultaneous folding and alignment based on two RNA
sequences (or alignments). 

.SS Input

.PP
Input consists of two sequences or alignments, which are specified in
fasta, clustal, stockholm, or LocARNA pp format.  Optionally,
structure and anchor constraints can be specified in the input files.
If alignments are given in the input, they are aligned without
revising the gap structure within the given alignments. Unless
specified, base pair probabilities of the input sequences or
alignments are predicted using the ViennaRNA package.  Optionally,
base pair probability information can be passed for one or both input
sequences (or alignments) using the input formats LocARNA PP 2.0 or
ViennaRNA postscript dotplot format.

.SS Constraints

.PP
Anchor and structure constraints can be specified in the input
files. Anchor constraints for sequences (alignments) are defined by
assigning names to sequence positions (alignment columns),
respectively. The exact semantics is either strict or relaxed
(controled by --relaxed-anchors). In strict semantics, anchor names
have to be sorted lexicographically in the input as well as in the
result alignment (in the sense that result columns receive inherit the
name from one or both input positions, where conflicts are
disallowed). In relaxed semantics, anchors of the same name are forced
into the same alignment column. The actual syntax of the constraint
specification depends on the file format (see Constraint Examples
below).

.SS Output

.PP
The final pairwise alignment is reported in standard and/or variants of the
clustal and stockholm format, as well as LocARNA's own pp format.
.SH DISCLAIMERS

For many purposes, it is more convenient to use the multiple alignment
tool mlocarna (even for pairwise alignment). However, certain tasks
--like aligning two specific alignments-- are supported only by the
pairwise tool or can be better controlled. Note that the performance
of locarna (as well as basically all tools in the LocARNA package) is
often significantly improved by the use of suitable
application-specific options, deviating from the default
settings. 

.PP
Locarna's alignments are optimal -- it's the parameters,
stupid ;).
.SH AVAILABILITY

The latest LocARNA package release is available online at
  
    http://www.bioinf.uni-freiburg.de/Software/LocARNA/

and at Github https://github.com/s-will/LocARNA
.SH "COPYING (LICENSE)"

Copyright 2005- Sebastian Will

The LocARNA package is released under GNU Public License v3.0
.SH REFERENCES

Sebastian Will, Kristin Reiche, Ivo L. Hofacker, Peter F. Stadler, and
Rolf Backofen.  Inferring non-coding RNA families and classes by means
of genome-scale structure-based clustering. PLOS Computational
Biology, 3 no. 4 pp. e65, 2007.
.SH AUTHOR

This man page is written and maintained by Sebastian Will it is part
of the LocARNA package.
.SH "REPORTING BUGS"
Report bugs to <will (at) informatik.uni\-freiburg.de>.
.SH "SEE ALSO"

The LocARNA PP 2.0 format is described online at
  
  http://www.bioinf.uni-freiburg.de/Software/LocARNA/PP/
